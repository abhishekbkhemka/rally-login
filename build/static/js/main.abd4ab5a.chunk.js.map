{"version":3,"sources":["components/Navbar.js","components/FormErrors.js","components/utility/FormValidation.js","components/auth/LogIn.js","components/auth/Register.js","components/auth/ForgotPassword.js","components/auth/ForgotPasswordVerification.js","components/auth/ChangePassword.js","components/auth/ChangePasswordConfirm.js","components/auth/Welcome.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","handleLogOut","_callee","event","regenerator_default","a","wrap","_context","prev","next","preventDefault","Auth","signOut","_this","props","auth","setAuthStatus","setUser","error","console","log","message","stop","react_default","createElement","className","role","aria-label","href","style","backgroundColor","padding","id","this","isAuthenticated","user","username","onClick","Component","FormErrors","formerrors","blankfield","passwordmatch","apierrors","cognito","validateForm","state","inputs","document","getElementsByClassName","i","length","classList","contains","remove","hasOwnProperty","getElementById","add","firstname","lastname","email","verificationcode","password","oldpassword","newpassword","confirmpassword","LogIn","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","errors","clearErrorState","setState","handleSubmit","_ref","asyncToGenerator","mark","err","Validate","objectSpread","signIn","sent","history","push","t0","_x","apply","arguments","onInputChange","defineProperty","target","value","currentAuthenticatedUser","components_FormErrors","onSubmit","type","aria-describedby","placeholder","onChange","Register","_this$state","signUpResponse","signUp","attributes","ForgotPassword","forgotPasswordHandler","forgotPassword","ForgotPasswordVerification","passwordVerificationHandler","forgotPasswordSubmit","ChangePassword","changePassword","ChangePasswordConfirmation","Welcome","App","isAuthenticating","authenticated","useri","currentSession","session","authProps","BrowserRouter","Navbar_Navbar","Switch","Route","exact","path","render","auth_LogIn","assign","auth_Register","auth_ForgotPassword","auth_ForgotPasswordVerification","auth_ChangePassword","ChangePasswordConfirm","display","justifyContent","alignItems","height","Boolean","window","location","hostname","match","Amplify","configure","mandatorySignIn","region","config","REGION","userPoolId","USER_POOL_ID","userPoolWebClientId","APP_CLIENT_ID","ReactDOM","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.abd4ab5a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Auth } from 'aws-amplify';\n\nexport default class Navbar extends Component {\n  handleLogOut = async (event) => {\n    event.preventDefault();\n    try {\n      Auth.signOut();\n      this.props.auth.setAuthStatus(false);\n      this.props.auth.setUser(null);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  render() {\n    return (\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"/\">\n            <div style={{ backgroundColor: 'grey', padding: '5px' }}>\n              Rikoouu Login Demo\n            </div>\n          </a>\n        </div>\n\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              {this.props.auth.isAuthenticated && this.props.auth.user && (\n                <p>\n                  <b>Hello {this.props.auth.user.username}</b>\n                </p>\n              )}\n              <div className=\"buttons\">\n                {!this.props.auth.isAuthenticated && (\n                  <div>\n                    <a href=\"/register\" className=\"button is-primary\">\n                      <strong>Register</strong>\n                    </a>\n                    <a href=\"/login\" className=\"button is-light\">\n                      Log in\n                    </a>\n                  </div>\n                )}\n                {this.props.auth.isAuthenticated && (\n                  <a\n                    href=\"/\"\n                    onClick={this.handleLogOut}\n                    className=\"button is-light\"\n                  >\n                    Log out\n                  </a>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React from \"react\";\n\nfunction FormErrors(props) {\n  if (\n    props.formerrors &&\n    (props.formerrors.blankfield || props.formerrors.passwordmatch)\n  ) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">\n          {props.formerrors.passwordmatch\n            ? \"Password value does not match confirm password value\"\n            : \"\"}\n        </div>\n        <div className=\"row justify-content-center help is-danger\">\n          {props.formerrors.blankfield ? \"All fields are required\" : \"\"}\n        </div>\n      </div>\n    );\n  } else if (props.apierrors) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">{props.apierrors}</div>\n      </div>\n    );\n  } else if (props.formerrors && props.formerrors.cognito) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">\n          {props.formerrors.cognito.message}\n        </div>\n      </div>\n    );\n  } else {\n    return <div />;\n  }\n}\n\nexport default FormErrors;","function validateForm(event, state) {\n  // clear all error messages\n  const inputs = document.getElementsByClassName(\"is-danger\");\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].classList.contains(\"error\")) {\n      inputs[i].classList.remove(\"is-danger\");\n    }\n  }\n\n  if (state.hasOwnProperty(\"username\") && state.username === \"\") {\n    document.getElementById(\"username\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"firstname\") && state.firstname === \"\") {\n    document.getElementById(\"firstname\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"lastname\") && state.lastname === \"\") {\n    document.getElementById(\"lastname\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"email\") && state.email === \"\") {\n    document.getElementById(\"email\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (\n    state.hasOwnProperty(\"verificationcode\") &&\n    state.verificationcode === \"\"\n  ) {\n    document.getElementById(\"verificationcode\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"password\") && state.password === \"\") {\n    document.getElementById(\"password\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"oldpassword\") && state.oldpassword === \"\") {\n    document.getElementById(\"oldpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"newpassword\") && state.newpassword === \"\") {\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"confirmpassword\") && state.confirmpassword === \"\") {\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (\n    state.hasOwnProperty(\"password\") &&\n    state.hasOwnProperty(\"confirmpassword\") &&\n    state.password !== state.confirmpassword\n  ) {\n    document.getElementById(\"password\").classList.add(\"is-danger\");\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { passwordmatch: true };\n  }\n  if (\n    state.hasOwnProperty(\"newpassword\") &&\n    state.hasOwnProperty(\"confirmpassword\") &&\n    state.newpassword !== state.confirmpassword\n  ) {\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { passwordmatch: true };\n  }\n  return;\n}\n\nexport default validateForm;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth, Hub, Logger } from \"aws-amplify\";\n\nclass LogIn extends Component {\n\n\n    constructor(props){\n        super(props)\n        Auth.currentAuthenticatedUser()\n\n\n }\n  state = {\n    username: \"\",\n    password: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n\n      const user = await Auth.signIn(this.state.username, this.state.password);\n      console.log(user);\n      this.props.auth.setAuthStatus(true);\n      this.props.auth.setUser(user);\n      this.props.history.push(\"/\");\n    }catch(error) {\n      let err = null;\n      !error.message ? err = { \"message\": error } : err = error;\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      });\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  };\n\n\n\n\n\n    render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Log in</h1>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input \n                  className=\"input\" \n                  type=\"text\"\n                  id=\"username\"\n                  aria-describedby=\"usernameHelp\"\n                  placeholder=\"Enter username or email\"\n                  value={this.state.username}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Login\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default LogIn;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from \"aws-amplify\";\n\nclass Register extends Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmpassword: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false,\n      passwordmatch: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false,\n        passwordmatch: false\n      }\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    const { username, email, password } = this.state;\n    try {\n      const signUpResponse = await Auth.signUp({\n        username,\n        password,\n        attributes: {\n          email: email\n        }\n      });\n      this.props.history.push(\"/welcome\");\n      console.log(signUpResponse);\n    } catch (error) {\n      let err = null;\n      !error.message ? err = { \"message\": error } : err = error;\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      });\n    }\n  }\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  }\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Register</h1>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input \n                  className=\"input\" \n                  type=\"text\"\n                  id=\"username\"\n                  aria-describedby=\"userNameHelp\"\n                  placeholder=\"Enter username\"\n                  value={this.state.username}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input \n                  className=\"input\" \n                  type=\"email\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"confirmpassword\"\n                  placeholder=\"Confirm password\"\n                  value={this.state.confirmpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Register\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Register;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from 'aws-amplify';\n\nclass ForgotPassword extends Component {\n  state = {\n    email: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  }\n\n  forgotPasswordHandler = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      await Auth.forgotPassword(this.state.email);\n      this.props.history.push('/forgotpasswordverification');\n    }catch(error) {\n      console.log(error);\n    }\n  }\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  }\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Forgot your password?</h1>\n          <p>\n            Please enter the email address associated with your account and we'll\n            email you a password reset link.\n          </p>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.forgotPasswordHandler}>\n            <div className=\"field\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  type=\"email\"\n                  className=\"input\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Submit\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ForgotPassword;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from 'aws-amplify';\n\nclass ForgotPasswordVerification extends Component {\n  state = {\n    verificationcode: \"\",\n    email: \"\",\n    newpassword: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  passwordVerificationHandler = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      await Auth.forgotPasswordSubmit(\n        this.state.email,\n        this.state.verificationcode,\n        this.state.newpassword\n      );\n      this.props.history.push(\"/changepasswordconfirmation\");\n    }catch(error) {\n      console.log(error);\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  };\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Set new password</h1>\n          <p>\n            Please enter the verification code sent to your email address below,\n            your email address and a new password.\n          </p>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.passwordVerificationHandler}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input\n                  type=\"text\"\n                  className=\"input\"\n                  id=\"verificationcode\"\n                  aria-describedby=\"verificationCodeHelp\"\n                  placeholder=\"Enter verification code\"\n                  value={this.state.verificationcode}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"email\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  type=\"password\"\n                  className=\"input\"\n                  id=\"newpassword\"\n                  placeholder=\"New password\"\n                  value={this.state.newpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Submit\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ForgotPasswordVerification;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from 'aws-amplify';\n\nclass ChangePassword extends Component {\n  state = {\n    oldpassword: \"\",\n    newpassword: \"\",\n    confirmpassword: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false,\n      passwordmatch: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false,\n        passwordmatch: false\n      }\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      const user = await Auth.currentAuthenticatedUser();\n      console.log(user);\n      await Auth.changePassword(\n        user,\n        this.state.oldpassword,\n        this.state.newpassword\n      );\n      this.props.history.push(\"/changepasswordconfirmation\");\n    } catch (error) {\n      let err = null;\n      !error.message ? err = { \"message\": error } : err = error;\n      this.setState({\n        errors: { ...this.state.errors, cognito: err }\n      });\n      console.log(err);\n    }\n  }\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  }\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Change Password</h1>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"oldpassword\"\n                  placeholder=\"Old password\"\n                  value={this.state.oldpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  id=\"newpassword\"\n                  placeholder=\"New password\"\n                  value={this.state.newpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  id=\"confirmpassword\"\n                  placeholder=\"Confirm password\"\n                  value={this.state.confirmpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Change password\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ChangePassword;","import React, { Component } from \"react\";\n\nclass ChangePasswordConfirmation extends Component {\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Change Password</h1>\n          <p>Your password has been successfully updated!</p>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ChangePasswordConfirmation;","import React from 'react';\n\nexport default function Welcome() {\n  return (\n    <section className=\"section auth\">\n      <div className=\"container\">\n        <h1>Welcome!</h1>\n        <p>You have successfully registered a new account.</p>\n        <p>We've sent you a email. Please click on the confirmation link to verify your account.</p>\n      </div>\n    </section>\n  )\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport LogIn from './components/auth/LogIn';\nimport Register from './components/auth/Register';\nimport ForgotPassword from './components/auth/ForgotPassword';\nimport ForgotPasswordVerification from './components/auth/ForgotPasswordVerification';\nimport ChangePassword from './components/auth/ChangePassword';\nimport ChangePasswordConfirm from './components/auth/ChangePasswordConfirm';\nimport Welcome from './components/auth/Welcome';\nimport { Auth } from 'aws-amplify';\n\nclass App extends Component {\n  state = {\n    isAuthenticated: false,\n    isAuthenticating: true,\n    user: null,\n  };\n\n  setAuthStatus = (authenticated) => {\n    this.setState({ isAuthenticated: authenticated });\n  };\n\n  setUser = (user) => {\n    this.setState({ user: user });\n  };\n\n  async componentDidMount() {\n    try {\n        const useri = await Auth.currentAuthenticatedUser();\n        console.log(useri)\n\n        const session = await Auth.currentSession();\n      this.setAuthStatus(true);\n      console.log(session);\n      const user = await Auth.currentAuthenticatedUser();\n      this.setUser(user);\n    } catch (error) {\n      if (error !== 'No current user') {\n        console.log(error);\n      }\n    }\n\n    this.setState({ isAuthenticating: false });\n  }\n\n  render() {\n    const authProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      user: this.state.user,\n      setAuthStatus: this.setAuthStatus,\n      setUser: this.setUser,\n    };\n    return (\n      !this.state.isAuthenticating && (\n        <div className=\"App\">\n          <Router>\n            <div>\n              <Navbar auth={authProps} />\n              <Switch>\n                <Route\n                  exact\n                  path=\"/login\"\n                  render={(props) => <LogIn {...props} auth={authProps} />}\n                />\n                <Route\n                  exact\n                  path=\"/register\"\n                  render={(props) => <Register {...props} auth={authProps} />}\n                />\n                <Route\n                  exact\n                  path=\"/forgotpassword\"\n                  render={(props) => (\n                    <ForgotPassword {...props} auth={authProps} />\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/forgotpasswordverification\"\n                  render={(props) => (\n                    <ForgotPasswordVerification {...props} auth={authProps} />\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/changepassword\"\n                  render={(props) => (\n                    <ChangePassword {...props} auth={authProps} />\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/changepasswordconfirmation\"\n                  render={(props) => (\n                    <ChangePasswordConfirm {...props} auth={authProps} />\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/welcome\"\n                  render={(props) => <Welcome {...props} auth={authProps} />}\n                />\n              </Switch>\n              <div\n                style={{\n                  display: 'grid',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  height: '100vh',\n                }}\n              >\n                {this.state.isAuthenticated ? 'User logged in' : 'Please Login'}\n              </div>\n            </div>\n          </Router>\n        </div>\n      )\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport './index.css';\nimport App from './App';\nimport Amplify from \"aws-amplify\";\nimport config from \"./config\";\nimport * as serviceWorker from './serviceWorker';\n\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\n  }\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}